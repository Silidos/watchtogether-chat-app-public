{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ravul\\\\Desktop\\\\chatApp\\\\react-firebase-authentication\\\\src\\\\components\\\\Admin\\\\index.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport { positions } from '@material-ui/system'; // const Admin = () => (\n//   <div>\n//     <h1>Admin</h1>\n//   </div>\n// );\n\nclass AdminBase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      joined: true,\n      nickname: \"\",\n      email: \"\",\n      msg: \"\",\n      messages: {}\n    };\n    this.chatRoom = this.props.firebase.db.ref().child('chatrooms').child('global');\n\n    this.handleNewMessages = snap => {\n      console.log(snap.val()); // if not null then update state\n\n      if (snap.val()) this.setState({\n        messages: snap.val()\n      });\n    };\n  }\n\n  componentDidMount() {\n    // subscribe\n    this.chatRoom.on('value', this.handleNewMessages);\n  }\n\n  componentWillUnmount() {\n    // unsubscribe\n    this.chatRoom.off('value', this.handleNewMessages);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, !this.state.joined ? React.createElement(\"div\", {\n      className: \"joinForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Nickname\",\n      value: this.state.nickname,\n      onChange: this.handleNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      placeholder: \"Email\",\n      value: this.state.email,\n      onChange: this.handleEmailChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Join\")) : React.createElement(\"div\", {\n      className: \"chat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"messages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, Object.keys(this.state.messages).map(message => {\n      // Check if the msg is from the user\n      if (this.state.messages[message][\"sender\"] === this.state.nickname) return React.createElement(\"div\", {\n        className: \"message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"me\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, this.state.messages[message][\"sender\"], \" :\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), this.state.messages[message][\"msg\"]);else return React.createElement(\"div\", {\n        className: \"message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"sender\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.state.messages[message][\"sender\"], \" :\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), this.state.messages[message][\"msg\"]);\n    })), React.createElement(\"input\", {\n      placeholder: \"msg\",\n      onChange: this.handleMsgChange,\n      onKeyDown: this.handleKeyDown,\n      value: this.state.msg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst Admin = compose(withFirebase)(AdminBase);\nexport default Admin;","map":{"version":3,"sources":["C:/Users/Ravul/Desktop/chatApp/react-firebase-authentication/src/components/Admin/index.js"],"names":["React","Component","Link","withRouter","compose","SignUpLink","withFirebase","ROUTES","Button","TextField","CssBaseline","Typography","Container","Box","positions","AdminBase","constructor","props","state","joined","nickname","email","msg","messages","chatRoom","firebase","db","ref","child","handleNewMessages","snap","console","log","val","setState","componentDidMount","on","componentWillUnmount","off","render","handleNameChange","handleEmailChange","handleClick","Object","keys","map","message","handleMsgChange","handleKeyDown","Admin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\nimport { SignUpLink } from '../SignUp';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport { positions } from '@material-ui/system';\r\n\r\n// const Admin = () => (\r\n//   <div>\r\n//     <h1>Admin</h1>\r\n//   </div>\r\n// );\r\nclass AdminBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      joined: true,\r\n      nickname: \"\",\r\n      email: \"\",\r\n      msg: \"\",\r\n      messages: {},\r\n    };\r\n\r\n  this.chatRoom = this.props.firebase.db.ref().child('chatrooms').child('global');\r\n    this.handleNewMessages = snap => {\r\n      console.log(snap.val());\r\n      // if not null then update state\r\n      if (snap.val()) this.setState({ messages: snap.val() });\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    // subscribe\r\n    this.chatRoom.on('value', this.handleNewMessages);\r\n  }\r\n  componentWillUnmount() {\r\n    // unsubscribe\r\n    this.chatRoom.off('value', this.handleNewMessages);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {!this.state.joined ? (\r\n          <div className=\"joinForm\">\r\n            <input placeholder=\"Nickname\" value={this.state.nickname} onChange={this.handleNameChange} /><br />\r\n            <input placeholder=\"Email\" value={this.state.email} onChange={this.handleEmailChange} /><br />\r\n            <button onClick={this.handleClick}>Join</button>\r\n          </div>\r\n        ) : (\r\n            <div className=\"chat\">\r\n              <div className=\"messages\">\r\n                {Object.keys(this.state.messages).map(message => {\r\n                  // Check if the msg is from the user\r\n                  if (this.state.messages[message][\"sender\"] === this.state.nickname)\r\n                    return (\r\n                      <div className=\"message\">\r\n                        <span id=\"me\">{this.state.messages[message][\"sender\"]} :</span><br />\r\n                        {this.state.messages[message][\"msg\"]}\r\n                      </div>\r\n                    );\r\n                  else\r\n                    return (\r\n                      <div className=\"message\">\r\n                        <span id=\"sender\">{this.state.messages[message][\"sender\"]} :</span><br />\r\n                        {this.state.messages[message][\"msg\"]}\r\n                      </div>\r\n                    );\r\n                })}\r\n              </div>\r\n              <input placeholder=\"msg\" onChange={this.handleMsgChange} onKeyDown={this.handleKeyDown} value={this.state.msg} /><br />\r\n            </div>\r\n          )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst Admin = compose(\r\n  withFirebase,\r\n)(AdminBase);\r\nexport default Admin;"]},"metadata":{},"sourceType":"module"}