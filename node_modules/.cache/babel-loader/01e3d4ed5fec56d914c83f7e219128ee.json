{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ravul\\\\Desktop\\\\chatApp\\\\watchtogether-chat-app-public\\\\src\\\\components\\\\Account\\\\index.js\";\nimport React, { Component } from 'react';\nimport { AuthUserContext } from '../Session';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport 'typeface-roboto';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { createMuiTheme, responsiveFontSizes, ThemeProvider } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { positions } from '@material-ui/system';\nimport FileUploader from \"react-firebase-file-uploader\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 500,\n    fontSize: 64,\n    htmlFontSize: 24,\n    color: 'white',\n    spacing: theme.spacing(5)\n  },\n  bar: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  }\n}));\nlet theme = createMuiTheme({\n  root: {\n    flexGrow: 1\n  },\n  typography: {\n    h1: {\n      fontSize: 50,\n      lineHeight: 1.5\n    },\n    h2: {\n      fontSize: 25,\n      lineHeight: 1.5\n    },\n    h3: {\n      fontSize: 30,\n      position: 'relative'\n    }\n  }\n});\ntheme.typography.h3 = {\n  [theme.breakpoints.up('md')]: {\n    fontSize: '6rem'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n};\n\nclass Account extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onStyle = () => {\n      var styles = useStyles();\n      return styles;\n    };\n\n    this.onListenForUser = uid => {\n      this.setState({\n        loading: true\n      });\n      var ref = this.props.firebase.user(uid);\n      this.state.uid = uid;\n      var user = ref.once(\"value\").then(function (snapshot) {\n        var newPost = snapshot.val();\n        return newPost.username;\n      });\n      return user;\n    };\n\n    this.checkForAvatar = uid => {\n      var ref = this.props.firebase.user(uid);\n      var avatar = ref.once(\"value\").then(function (snapshot) {\n        var newPost = snapshot.val();\n        return newPost.avatarURL;\n      });\n      return avatar;\n    };\n\n    this.handleUploadStart = () => this.setState({\n      isUploading: true,\n      progress: 0\n    });\n\n    this.handleProgress = progress => this.setState({\n      progress\n    });\n\n    this.handleUploadError = error => {\n      this.setState({\n        isUploading: false\n      });\n      console.error(error);\n    };\n\n    this.handleUploadSuccess = filename => {\n      const user = this.context;\n      this.setState({\n        avatar: filename,\n        progress: 100,\n        isUploading: false\n      });\n      this.props.firebase.storageImage(user.uid).child(filename).getDownloadURL().then(url => {\n        this.setState({\n          avatarURL: url\n        });\n        var postDate = {\n          avatarURL: url\n        };\n        console.log();\n        this.props.firebase.user(user.uid).update(postDate);\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      loading: true,\n      uid: '',\n      avatarURL: '',\n      isUploading: false,\n      progress: 0\n    };\n  }\n\n  async componentDidMount() {\n    const user = this.context;\n    console.log((await this.onListenForUser(user.uid)));\n    var hello = await this.onListenForUser(user.uid);\n    var avatar = await this.checkForAvatar(user.uid);\n    this.state.avatarURL = avatar;\n    console.log(avatar);\n    this.state.username = hello;\n    this.setState({\n      loading: false\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          loading = _this$state.loading,\n          username = _this$state.username,\n          email = _this$state.email;\n    return React.createElement(AuthUserContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, authUser => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, !loading && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: theme.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: theme.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      color: \"textPrimary\",\n      theme: theme,\n      variant: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Username: \", username))), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: theme.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      color: \"textPrimary\",\n      theme: theme,\n      variant: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Email: \", authUser.email))), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: theme.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      color: \"textPrimary\",\n      theme: theme,\n      variant: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Profile Picture:\")), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, this.state.isUploading && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Progress: \", this.state.progress), this.state.avatarURL && React.createElement(\"img\", {\n      src: this.state.avatarURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      style: {\n        backgroundColor: 'steelblue',\n        color: 'white',\n        padding: 10,\n        borderRadius: 4,\n        cursor: 'pointer'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Select your avatar\", React.createElement(FileUploader, {\n      hidden: true,\n      accept: \"image/*\",\n      randomizeFilename: true,\n      storageRef: this.props.firebase.storageImage(authUser.uid),\n      onUploadStart: this.handleUploadStart,\n      onUploadError: this.handleUploadError,\n      onUploadSuccess: this.handleUploadSuccess,\n      onProgress: this.handleProgress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }))))))), loading && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Loading = \", authUser.uid, \" ...\")));\n  }\n\n}\n\nAccount.contextType = AuthUserContext;\nconst AccountBase = compose(withFirebase)(Account);\nexport default AccountBase;","map":{"version":3,"sources":["C:/Users/Ravul/Desktop/chatApp/watchtogether-chat-app-public/src/components/Account/index.js"],"names":["React","Component","AuthUserContext","compose","withFirebase","Box","Typography","makeStyles","createMuiTheme","responsiveFontSizes","ThemeProvider","Paper","Grid","positions","FileUploader","useStyles","theme","root","width","maxWidth","fontSize","htmlFontSize","color","spacing","bar","flexGrow","menuButton","marginRight","typography","h1","lineHeight","h2","h3","position","breakpoints","up","paper","padding","textAlign","palette","text","secondary","Account","constructor","props","onStyle","styles","onListenForUser","uid","setState","loading","ref","firebase","user","state","once","then","snapshot","newPost","val","username","checkForAvatar","avatar","avatarURL","handleUploadStart","isUploading","progress","handleProgress","handleUploadError","error","console","handleUploadSuccess","filename","context","storageImage","child","getDownloadURL","url","postDate","log","update","email","componentDidMount","hello","render","authUser","backgroundColor","borderRadius","cursor","contextType","AccountBase"],"mappings":"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","sourcesContent":["  \r\nimport React, { Component } from 'react';\r\nimport { AuthUserContext } from '../Session';\r\nimport { compose } from 'recompose';\r\nimport { withFirebase } from '../Firebase';\r\n\r\n\r\nimport 'typeface-roboto';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { createMuiTheme, responsiveFontSizes, ThemeProvider } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { positions } from '@material-ui/system';\r\nimport FileUploader from \"react-firebase-file-uploader\";\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 500,\r\n    fontSize: 64,\r\n    htmlFontSize: 24,\r\n    color: 'white',\r\n    spacing: theme.spacing(5)\r\n  },\r\n  bar: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\nlet theme = createMuiTheme({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  typography: {\r\n    h1: {\r\n      fontSize: 50,\r\n      lineHeight: 1.5,\r\n    },\r\n    h2: {\r\n      fontSize: 25,\r\n      lineHeight: 1.5,\r\n    },\r\n    h3: {\r\n      fontSize: 30,\r\n      position: 'relative'\r\n    }\r\n  },\r\n});\r\ntheme.typography.h3 = {\r\n  [theme.breakpoints.up('md')]: {\r\n    fontSize: '6rem',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}\r\nclass Account extends Component {\r\n  static contextType = AuthUserContext\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      loading: true,\r\n      uid: '',\r\n      avatarURL: '',\r\n      isUploading: false,\r\n      progress: 0\r\n    };\r\n  }\r\n  async componentDidMount()\r\n  {\r\n    const user = this.context\r\n    console.log(await this.onListenForUser(user.uid));\r\n    var hello = await this.onListenForUser(user.uid);\r\n    var avatar = await this.checkForAvatar(user.uid);\r\n    this.state.avatarURL = avatar;\r\n    console.log(avatar);\r\n    this.state.username = hello;\r\n   this.setState({loading: false});\r\n  }\r\n\r\n  onStyle = () =>\r\n  {\r\n    var styles = useStyles();\r\n    return styles;\r\n  }\r\n  onListenForUser = (uid) =>\r\n  {\r\n    this.setState({ loading: true });\r\n\r\n    var ref = this.props.firebase.user(uid);\r\n    this.state.uid = uid;\r\n    var user = ref.once(\"value\")\r\n    .then(function(snapshot){\r\n    var newPost = snapshot.val();\r\n     return (newPost.username);\r\n  })\r\n  return (user);\r\n  };\r\n\r\n  checkForAvatar = (uid) =>\r\n  {\r\n    var ref = this.props.firebase.user(uid);\r\n    var avatar = ref.once(\"value\")\r\n    .then(function(snapshot)\r\n    {\r\n      var newPost = snapshot.val();\r\n      return (newPost.avatarURL);\r\n    })\r\n    return (avatar);\r\n  }\r\n  handleUploadStart = () => this.setState({ isUploading: true, progress: 0 });\r\n  handleProgress = progress => this.setState({ progress });\r\n  handleUploadError = error => {\r\n    this.setState({ isUploading: false });\r\n    console.error(error);\r\n  };\r\n  handleUploadSuccess = filename => {\r\n    const user = this.context;\r\n    this.setState({ avatar: filename, progress: 100, isUploading: false });\r\n    this.props.firebase.storageImage(user.uid)\r\n      .child(filename)\r\n      .getDownloadURL()\r\n      .then(url => {\r\n        this.setState({ avatarURL: url });\r\n        var postDate = \r\n      {\r\n        avatarURL: url\r\n      }\r\n      console.log()\r\n      this.props.firebase.user(user.uid).update(postDate);\r\n      });\r\n  };\r\n\r\n  \r\n render() {\r\n  const {loading, username, email} = this.state;\r\nreturn (\r\n<AuthUserContext.Consumer>\r\n      {authUser => (\r\n        <div>\r\n          {!loading && (\r\n            \r\n            <div>\r\n              \r\n              <div className={theme.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Paper className={theme.paper}>\r\n       <Typography color=\"textPrimary\" theme = {theme} variant = \"h3\">\r\n         Username: {username}\r\n       </Typography></Paper>\r\n       </Grid>\r\n       <Grid item xs={6}>\r\n          <Paper className={theme.paper}>\r\n          <Typography color=\"textPrimary\" theme = {theme} variant = \"h3\">\r\n         Email: {authUser.email}\r\n       </Typography></Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper className={theme.paper}>\r\n          <Typography color=\"textPrimary\" theme = {theme} variant = \"h3\">\r\n         Profile Picture:\r\n       </Typography></Paper>\r\n       <form>\r\n       {this.state.isUploading && <p>Progress: {this.state.progress}</p>}\r\n       {this.state.avatarURL && <img src={this.state.avatarURL} />}\r\n       <label style={{backgroundColor: 'steelblue', color: 'white', padding: 10, borderRadius: 4, cursor: 'pointer'}}>\r\n    Select your avatar\r\n    <FileUploader\r\n      hidden\r\n      accept=\"image/*\"\r\n      randomizeFilename\r\n      storageRef={this.props.firebase.storageImage(authUser.uid)}\r\n      onUploadStart={this.handleUploadStart}\r\n      onUploadError={this.handleUploadError}\r\n      onUploadSuccess={this.handleUploadSuccess}\r\n      onProgress={this.handleProgress}\r\n    />\r\n    \r\n  </label>   \r\n  </form>\r\n        </Grid> \r\n        </Grid>\r\n        \r\n    </div>\r\n       \r\n       </div>\r\n          )}\r\n\r\n          {loading && <div>Loading = {authUser.uid} ...</div>\r\n          }\r\n        </div>\r\n      )}\r\n    </AuthUserContext.Consumer>\r\n  );\r\n}\r\n}\r\n\r\nconst AccountBase = compose(\r\n  withFirebase,\r\n)(Account)\r\nexport default AccountBase;"]},"metadata":{},"sourceType":"module"}